
//Decorators have the same supertype as the objects they decorate
//You can use one or more decorators to wrap an object
//Given that the decorator has the same supertype as the object it decorates, we can pass around a decorated object in place of the
original (wrapped) object
// *****Key Point, The decorator adds its own behevior either before and/or after delegating to the object it decorates to do the rest of the job
//Objects can be decorated at any time, so we can decorate objects dynamically at runtime with as many decorators as we like.









